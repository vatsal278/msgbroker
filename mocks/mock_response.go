// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vatsal278/msgbroker/pkg/responseWriter (interfaces: Response)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockResponse is a mock of Response interface.
type MockResponse struct {
	ctrl     *gomock.Controller
	recorder *MockResponseMockRecorder
}

// MockResponseMockRecorder is the mock recorder for MockResponse.
type MockResponseMockRecorder struct {
	mock *MockResponse
}

// NewMockResponse creates a new mock instance.
func NewMockResponse(ctrl *gomock.Controller) *MockResponse {
	mock := &MockResponse{ctrl: ctrl}
	mock.recorder = &MockResponseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResponse) EXPECT() *MockResponseMockRecorder {
	return m.recorder
}

// Update mocks base method.
func (m *MockResponse) Update(arg0 int, arg1 string, arg2 interface{}) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Update", arg0, arg1, arg2)
}

// Update indicates an expected call of Update.
func (mr *MockResponseMockRecorder) Update(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockResponse)(nil).Update), arg0, arg1, arg2)
}
